---
networks:
  public:
    external: true
{% if docker_network_dns.exists %}
  dns:
    external: true
{% endif %}

services:
  wg-easy:
    cap_add:
      - 'NET_ADMIN'
      - 'SYS_MODULE'
    container_name: 'wg-easy'
    environment:
      UI_TRAFFIC_STATS: true
      LANG: "{{ language }}"
      PASSWORD: "{{ wg_easy_admin_pass }}"
      WG_HOST: "{{ wg_easy_domain }}"
      WG_DEFAULT_ADDRESS: "{{ wg_easy_subnet }}"
      WG_DEFAULT_DNS: "{{ (networks['dns']|split('.'))[:3]|join('.') + '.254' if docker_network_dns.exists else wg_easy_dns }}{{ ',' + wg_easy_search_base if wg_easy_search_base else '' }}"
      WG_ALLOWED_IPS: "{{ wg_easy_allowed_ips }}"
    healthcheck:
      test: "/usr/bin/timeout 5s /bin/sh -c '/usr/bin/wg show | /bin/grep -q interface || exit 1'"
      interval: '1m'
      timeout: '5s'
      retries: 3
    hostname: 'wg-easy'
    image: 'ghcr.io/wg-easy/wg-easy:latest'
    labels:
      com.centurylinklabs.watchtower.enable: true
      homepage.group: 'Management'
      homepage.name: 'WG-Easy'
      homepage.description: 'WireGuard VPN'
      homepage.icon: '/icons/wg-easy.png'
      homepage.href: "https://{{ wg_easy_domain }}{{ wg_easy_path }}/"
      traefik.enable: true
      traefik.http.routers.wg-easy.rule: "Host(`{{ wg_easy_domain }}`) && PathPrefix(`{{ wg_easy_path }}/`)"
      traefik.http.routers.wg-easy.entrypoints: 'https'
      traefik.http.routers.wg-easy.service: 'wg-easy'
      traefik.http.routers.wg-easy.middlewares: 'wg-easy@docker'
      traefik.http.services.wg-easy.loadbalancer.server.port: 51821
      traefik.http.middlewares.wg-easy.stripprefix.prefixes: "{{ wg_easy_path }}"
      traefik.udp.services.wg-easy.loadbalancer.server.port: 51820
    logging:
      driver: 'json-file'
      options:
        max-file: 1
        max-size: '10m'
    networks:
      - 'public'
{% if docker_network_dns.exists %}
      - 'dns'
{% endif %}
    ports:
      - "{{ wg_easy_port }}:51820/udp"
    restart: 'unless-stopped'
    security_opt:
      - 'no-new-privileges'
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
    volumes:
      - "{{ path_data }}/wg-easy:/etc/wireguard:rw"
...
