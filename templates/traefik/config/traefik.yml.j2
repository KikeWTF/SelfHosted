---
accessLog:
  filters:
    statusCodes:
      - '200'
api:  # TODO: Secure the API with custom routers and middlewares
  dashboard: "{{ traefik_dashboard|bool }}"
  disableDashboardAd: true
  insecure: "{{ traefik_dashboard|bool }}"
certificatesResolvers:
  challenge:
    acme:
      caServer: "https://acme-{{ 'staging-' if traefik_dev|bool else '' }}v02.api.letsencrypt.org/directory"
{% if email_administrator|length > 0 %}
      email: "{{ email_administrator }}"
{% endif %}
      storage: /certificates/acme.json
{% if traefik_provider|length > 0 %}
      dnsChallenge:
        delayBeforeCheck: '10s'
        disablePropagationCheck: false
        provider: "{{ traefik_provider }}"
        resolvers:
          - '1.1.1.1:53'
          - '8.8.8.8:53'
{% else %}
      tlsChallenge: {}
{% endif %}
entryPoints:
  ssh:
    address: ':22/tcp'
  https:
    address: ':443/tcp'
    http:
      middlewares:
        - 'compression@file'
        - 'errors@file'
        - 'jokes@file'
        - 'security@file'
      tls:
        options: 'default'
        certResolver: 'challenge'
{% if domains|length > 0 %}
        domains:
{% for domain in domains %}
          - main: "{{ domain }}"
            sans:
              - "*.{{ domain }}"
{% endfor %}
{% endif %}
    http2:
      maxConcurrentStreams: 250
    http3:
      advertisedPort: 443
  healthcheck:
    address: '127.0.0.1:9999/tcp'
experimental:
  plugins:
    rewriteheaders:
      modulename: "github.com/XciD/traefik-plugin-rewrite-headers"
      version: "v0.0.3"
global:
  checkNewVersion: false
  sendAnonymousUsage: false
log:
  level: 'debug'
ping:
  entryPoint: 'healthcheck'
providers:
  docker:
    allowEmptyServices: false
    endpoint: 'unix:///var/run/docker.sock'
    exposedByDefault: false
    network: 'public'
    useBindPortIP: false
    watch: true
  file:
    directory: '/etc/traefik/dynamic'
    watch: true
  providersThrottleDuration: '2s'
# TODO: Metrics (Prometheus)
...
